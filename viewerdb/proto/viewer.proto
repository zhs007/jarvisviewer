syntax = "proto3";

package viewerdbpb;

// ViewerType - Viewer type
//            - 数据类型
enum ViewerType {
    EMPTY = 0;
    GRAPH = 1;
    JSON = 2;
    LINE = 3;
    MULTI = 4;
    PIE = 5;
    SCATTER = 6;
    BOXPLOT = 7;
    DTGAME6 = 8;
    SCATTER2 = 9;
    BOXPLOT2 = 10;
    BOXPLOT3 = 11;
}

// ValueType - Value type
//           - 数据类型
enum ValueType {
    NULLTYPE = 0;
    INT32 = 1;
    INT64 = 2;
    FLOAT32 = 3;
    FLOAT64 = 4;
    STRING = 5;
}

// DTGame6ArrayType - Array Type
//                  - 数据类型
enum DTGame6ArrayType {
    // 行优先
    ROW = 0;
    // 列优先
    COLUMN = 1;
}

// GraphNode - Graph node
//           - 图节点
message GraphNode {
    // id
    int32 id = 1;
    // name
    string name = 2;
    // size
    int32 size = 3;
    // category
    string category = 4;
}

// GraphLink - Graph link info
//           - 图节点连接关系
message GraphLink {
    // src
    int32 src = 1;
    // dest
    int32 dest = 2;
    // size
    int32 size = 3;
}

// GraphData - Graph data
//           - 图节点完整数据
message GraphData {
    // nodes
    repeated GraphNode nodes = 1;
    // links
    repeated GraphLink links = 2;
}

// JSONData - JSON data
//          - json格式的数据
message JSONData {
    // string for json
    string str = 1;
}

// LineSeriesData - Line series data
//                - 折线图数据
message LineSeriesData {
    string name = 1;
    repeated string valString = 2;
    repeated int32 valInt32 = 3;
    repeated int64 valInt64 = 4;
}

// LineData - Line data
//           - 折线图完整数据
message LineData {
    // xAxisType
    string xAxisType = 1;
    // xAxisString
    repeated string xAxisString = 2;
    // xAxisInt32
    repeated int32 xAxisInt32 = 3;
    // xAxisInt64
    repeated int64 xAxisInt64 = 4;    

    // yAxisType
    string yAxisType = 100;
    // xAxisData
    repeated LineSeriesData series = 101;
}

// MultiData - Multi data
//           - 多数据模式完整数据
message MultiData {
    // tokens
    repeated string tokens = 1;
}

// PieDataInfo - Pie data info
//             - 饼图完整数据
message PieDataInfo {
    // name
    string name = 1;
    // valInt32
    int32 valInt32 = 2;
    // valInt64
    int64 valInt64 = 3;
}

// PieData - Pie data
//         - 饼图完整数据
message PieData {
    // name
    string name = 1;    
    // tokens
    repeated PieDataInfo data = 2;
}

// ScatterNode - scatter node
//             - 散点图数据
message ScatterNode {
    // xInt32
    int32 xInt32 = 1;
    // xInt64
    int64 xInt64 = 2;

    // yInt32
    int32 yInt32 = 100;
    // xInt64
    int64 yInt64 = 101;
}

// ScatterData - scatter data
//             - 散点图数据
message ScatterData {
    ValueType xType = 1;
    ValueType yType = 2;
    repeated ScatterNode data = 3;
    string name = 4;
}

// Scatter2Data - scatter2 data
//             - 散点图数据
message Scatter2Data {
    repeated ScatterData lst = 1;
}

// Dataset - dataset
//             - dataset
message Dataset {
    string Name = 1;
    ValueType valType = 2;
    repeated int32 arrInt32 = 3;
    repeated int64 arrInt64 = 4;
    repeated float arrFloat32 = 5;
    repeated double arrFloat64 = 6;
    repeated string arrString = 7;
}

// BoxplotNode - boxplot node
//             - 盒须图数据
message BoxplotNode {
    string Name = 1;
    ValueType valType = 2;
    repeated int32 arrInt32 = 3;
    repeated int64 arrInt64 = 4;
    repeated float arrFloat32 = 5;
    repeated double arrFloat64 = 6;
}

// BoxplotData - boxplot data
//             - 盒须图数据
message BoxplotData {
    repeated BoxplotNode data = 1;
    string category = 2;
}

// Boxplot2Data - boxplot2 data
//             - 盒须图数据
message Boxplot2Data {
    repeated BoxplotData lst = 1;
}

// Boxplot3 - boxplot3
//          - 盒须图数据
message Boxplot3 {
    string category = 1;
    repeated string datasetName = 2;
}

// Boxplot3Data - boxplot3 data
//              - 盒须图数据
message Boxplot3Data {
    map<string, Dataset> datasets = 1;
    repeated Boxplot3 boxplots = 2;
    Dataset xVal = 3;
}

// DTGame6List - dtgame6 list
//             - dtgame6
message DTGame6List {
    repeated int32 arr = 1;
}

// DTGame6Pos - dtgame6 pos
//            - dtgame6
message DTGame6Pos {
    int32 x = 1;
    int32 y = 2;
}

// DTGame6Result - dtgame6 game result
//               - dtgame6
message DTGame6Result {
    string type = 1;
    int32 bet = 2;
    int32 realBet = 3;
    int32 baseMul = 4;
    int32 win = 5;
    int32 realWin = 6;
    int32 bonusPrize = 7;
    int32 otherMul = 8;

    repeated DTGame6Pos pos = 100;
}

// DTGame6Data - dtgame6 data
//             - dtgame6
message DTGame6Data {
    string gameCode = 1;
    string gameModule = 2;
    repeated string listParent = 3;

    DTGame6ArrayType arrType = 100;
    repeated DTGame6List arr = 101;

    int32 bet = 200;
    int32 realBet = 201;
    int32 win = 202;
    int32 realWin = 203;    
    repeated DTGame6Result results = 204;
}

// ViewerData - viewer data
//            - viewer数据
message ViewerData {
    // type
    ViewerType type = 1;
    // title
    string title = 2;
    // token
    string token = 3;

    oneof data {
        // graph - valid only type is GRAPH
        GraphData graph = 1000;
        // json - valid only type is JSON
        JSONData json = 1001;
        // line - valid only type is LINE
        LineData line = 1002;
        // multi - valid only type is MULTI
        MultiData multi = 1003;
        // pie - valid only type is PIE
        PieData pie = 1004;
        // scatter - valid only type is SCATTER
        ScatterData scatter = 1005;
        // boxplot - valid only type is BOXPLOT
        BoxplotData boxplot = 1006;
        // dtgame6 - valid only type is DTGAME6
        DTGame6Data dtgame6 = 1007;
        // scatter2 - valid only type is SCATTER2
        Scatter2Data scatter2 = 1008;
        // boxplot2 - valid only type is BOXPLOT2
        Boxplot2Data boxplot2 = 1009;
        // boxplot3 - valid only type is BOXPLOT3
        Boxplot3Data boxplot3 = 1010;
    }
}